CREATE TABLE IF NOT EXISTS USERS (
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL UNIQUE
);

CREATE INDEX IF NOT EXISTS USERS_EMAIL_IDX ON Users(email);

CREATE TABLE IF NOT EXISTS ITEM_REQUESTS (
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    description VARCHAR(2000) DEFAULT '' NOT NULL,
    requestor_id INTEGER NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT ITEM_REQUESTS_REQUESTOR_ID_FK FOREIGN KEY(requestor_id) REFERENCES USERS(id)
);

CREATE INDEX IF NOT EXISTS ITEM_REQUESTS_REQUESTOR_ID_FK_IDX ON ITEM_REQUESTS(requestor_id);

CREATE TABLE IF NOT EXISTS ITEMS(
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    owner_id INTEGER NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(2000) NOT NULL,
    is_available BOOLEAN NOT NULL,
    request_id INTEGER,
    CONSTRAINT ITEMS_OWNER_ID_FK FOREIGN KEY(owner_id) REFERENCES USERS(id),
    CONSTRAINT ITEMS_REQUEST_ID_FK FOREIGN KEY(request_id) REFERENCES ITEM_REQUESTS(id)
);

CREATE INDEX IF NOT EXISTS ITEMS_OWNER_ID_FK_IDX ON ITEMS(owner_id);
CREATE INDEX IF NOT EXISTS ITEMS_REQUEST_ID_FK_IDX ON ITEMS(request_id);

CREATE TABLE IF NOT EXISTS BOOKINGS(
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id INTEGER NOT NULL,
    booker_id INTEGER NOT NULL,
    status VARCHAR(10),
    CONSTRAINT BOOKINGS_BOOKER_ID_FK FOREIGN KEY(booker_id) REFERENCES USERS(id),
    CONSTRAINT BOOKINGS_ITEM_ID_FK FOREIGN KEY(item_id) REFERENCES ITEMS(id)
);

CREATE INDEX IF NOT EXISTS BOOKINGS_BOOKER_ID_FK_IDX ON BOOKINGS(booker_id);
CREATE INDEX IF NOT EXISTS BOOKINGS_ITEM_ID_FK_IDX ON BOOKINGS(item_id);

CREATE TABLE IF NOT EXISTS COMMENTS(
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    text VARCHAR(2000) NOT NULL,
    item_id INTEGER NOT NULL,
    author_id INTEGER NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT COMMENTS_ITEM_ID_FK FOREIGN KEY(item_id) REFERENCES ITEMS(id),
    CONSTRAINT COMMENTS_AUTHOR_ID_FK FOREIGN KEY(author_id) REFERENCES USERS(id)
);

CREATE INDEX IF NOT EXISTS COMMENTS_AUTHOR_ID_FK_IDX ON COMMENTS(author_id);
CREATE INDEX IF NOT EXISTS COMMENTS_ITEM_ID_FK_IDX ON COMMENTS(item_id);

